Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2



Solution:

class Solution {
    public int majorityElement(int[] nums) {
        HashMap<Integer,Integer> map = new HashMap<Integer, Integer>();
         int con = nums.length / 2;
         int co = 0;
        
        for(int i: nums)
        {
            map.put(i,map.getOrDefault(i,0)+1);
        }
        
        for(int i=0;i<nums.length;i++)
        {
            Integer c = nums[i];
            if(map.containsKey(c) && map.get(c) > con)
                co = nums[i];
        }
         
        return co;
        }
        
}
